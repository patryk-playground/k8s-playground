---

# Docker runtime
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

  - name: Retrieve Linux distro release version
    command: lsb_release -cs
    register: _distro_release
    changed_when: False

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ _distro_release.stdout }} stable
      mode: 600
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

# Kubernetes tools
  - name: Let iptables see bridged traffic 
    copy: 
      src: files/k8s.j2
      dest: /etc/sysctl.d/k8s.conf
      mode: 0600
    register: _sysctl_update

  - when: _sysctl_update.changed
    name: Restart sysctl 
    command: sysctl --system

  - meta: end_play

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      mode: 600
      filename: kubernetes.list
      state: present

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Hold Kubernetes binaries
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
        - kubelet 
        - kubeadm 
        - kubectl

  # - name: Configure node ip
  #   lineinfile:
  #     path: /etc/default/kubelet
  #     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  # - name: Restart kubelet
  #   service:
  #     name: kubelet
  #     daemon_reload: yes
  #     state: restarted
